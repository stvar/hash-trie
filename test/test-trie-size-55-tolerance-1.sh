#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Hash-Trie.
# 
# Hash-Trie is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Hash-Trie is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Hash-Trie.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ hash-trie-gen-test -g test -T trie-size-55-tolerance-1
#
[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L trie-size-55-tolerance-1.old <(echo \
'$ test -x ./hash-trie
$ print() { printf '\''%s\n'\'' "$@"; }
$ hash-trie-config() { hash-trie -P|sed -r '\''/^(TOLERANCE|TRIE_SIZE):/!d'\''; }
$ test -x hash-trie-trie-size-55-tolerance-1
$ hash-trie() { ./hash-trie-trie-size-55-tolerance-1 "$@"; }
$ hash-trie-config
TOLERANCE:    1
TRIE_SIZE:    55
$ print a b c bc cd bcd cde|hash-trie -Lq --debug=probing
!!! constants: trie_size=55 tolerance=1 alpha=2 mod_x=3 max_h=29 max_x=1
!!! probing:27: str="bc" c='\''c'\'' x=2 last_h=27 h=29 [1], 27 [1]
!!! probing:27: str="cd" c='\''d'\'' x=1 last_h=29 h=28-29 [2]
!!! probing:27: str="bcd" c='\''d'\'' x=0 last_h=28 h=27-28 [2]
!!! probing:27: str="cde" c='\''e'\'' x=2 last_h=27 h=29 [1], 27 [1] !!!
$ print a b c bc cd bcd cde|hash-trie -d
hash-trie: error:7: failed to put '\''cde'\'' in trie
p	link[p]	ch[p]	sibling[p]	count[p]	word
0	0	header	26	0	
1	0	1	0	1	a
2	27	2	1	1	b
3	29	3	2	1	c
4	0	4	3	0	d
5	0	5	4	0	e
6	0	6	5	0	f
7	0	7	6	0	g
8	0	8	7	0	h
9	0	9	8	0	i
10	0	10	9	0	j
11	0	11	10	0	k
12	0	12	11	0	l
13	0	13	12	0	m
14	0	14	13	0	n
15	0	15	14	0	o
16	0	16	15	0	p
17	0	17	16	0	q
18	0	18	17	0	r
19	0	19	18	0	s
20	0	20	19	0	t
21	0	21	20	0	u
22	0	22	21	0	v
23	0	23	22	0	w
24	0	24	23	0	x
25	0	25	24	0	y
26	0	26	25	0	z
27	2	header	30	0	
28	30	header	32	0	
29	3	header	33	0	
30	28	3	27	1	bc
...	.	.	.	.	.
32	0	4	28	1	bcd
33	0	4	29	1	cd
...	.	.	.	.	.
$ print a b c bc cd bcd cde|hash-trie -p
hash-trie: error:7: failed to put '\''cde'\'' in trie
a	1
b	1
c	1
bc	1
bcd	1
cd	1'
) -L trie-size-55-tolerance-1.new <(
echo '$ test -x ./hash-trie'
test -x ./hash-trie 2>&1 ||
echo 'command failed: test -x ./hash-trie'

echo '$ print() { printf '\''%s\n'\'' "$@"; }'
print() { printf '%s\n' "$@"; } 2>&1 ||
echo 'command failed: print() { printf '\''%s\n'\'' "$@"; }'

echo '$ hash-trie-config() { hash-trie -P|sed -r '\''/^(TOLERANCE|TRIE_SIZE):/!d'\''; }'
hash-trie-config() { hash-trie -P|sed -r '/^(TOLERANCE|TRIE_SIZE):/!d'; } 2>&1 ||
echo 'command failed: hash-trie-config() { hash-trie -P|sed -r '\''/^(TOLERANCE|TRIE_SIZE):/!d'\''; }'

echo '$ test -x hash-trie-trie-size-55-tolerance-1'
test -x hash-trie-trie-size-55-tolerance-1 2>&1 ||
echo 'command failed: test -x hash-trie-trie-size-55-tolerance-1'

echo '$ hash-trie() { ./hash-trie-trie-size-55-tolerance-1 "$@"; }'
hash-trie() { ./hash-trie-trie-size-55-tolerance-1 "$@"; } 2>&1 ||
echo 'command failed: hash-trie() { ./hash-trie-trie-size-55-tolerance-1 "$@"; }'

echo '$ hash-trie-config'
hash-trie-config 2>&1 ||
echo 'command failed: hash-trie-config'

echo '$ print a b c bc cd bcd cde|hash-trie -Lq --debug=probing'
print a b c bc cd bcd cde|hash-trie -Lq --debug=probing 2>&1 ||
echo 'command failed: print a b c bc cd bcd cde|hash-trie -Lq --debug=probing'

echo '$ print a b c bc cd bcd cde|hash-trie -d'
print a b c bc cd bcd cde|hash-trie -d 2>&1 ||
echo 'command failed: print a b c bc cd bcd cde|hash-trie -d'

echo '$ print a b c bc cd bcd cde|hash-trie -p'
print a b c bc cd bcd cde|hash-trie -p 2>&1 ||
echo 'command failed: print a b c bc cd bcd cde|hash-trie -p'
)

